"""
Utilities for generating waveform training data from conventional waveform sources.
"""

import scipy.interpolate as interp

# Import LAL tools
import lalsimulation
import lal
from lal import cached_detector_by_prefix, TimeDelayFromEarthCenter, LIGOTimeGPS

class WaveformApproximant:
    """
    This class handles a waveform approximant model.
    """
    pass

class LALSimulationApproximant(WaveformApproximant):
    """
    This is the base class for LALSimulation-based approximants.
    """
    
    args = {
        "m1": m1,
        "m2": m2,
        "S1x": 0.,
        "S1y": 0.,
        "S1z": 0.,
        "S2x": 0.,
        "S2y": 0.,
        "S2z": 0.,
        "distance": 10,
        "inclination": 0,
        "phi ref": 0.,
        "longAscNodes": 0.,
        "eccentricity": 0.,
        "meanPerAno": 0.,
        "delta T": dt,
        "f_min": 50.0,
        "f_ref": 50.0,
        "params": lal.CreateDict(),
        "approximant": None,
    }
    
    pass

class IMRPhenomPv2(LALSimulationApproximant):
    self.args["approximant"] = lalsimulation.GetApproximantFromString("IMRPhenomPv2")
    
    def time_domain(self, parameters):
        """
        Retrieve a time domain waveform for a given set of parameters.
        """
        self.args.update(parameters)
        
        hp, hx = lalsimulation.SimInspiralChooseTDWaveform(
            *list(self.args.values())
        )
        return hp, hx
