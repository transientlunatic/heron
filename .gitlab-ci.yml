stages:
  - analysis
  - test
  - science tests
  - build
  - deploy

image: python:3.9

include:
  - template: Dependency-Scanning.gitlab-ci.yml

documentation-coverage:
  stage: analysis
  allow_failure: true
  script:
   - pip install docstr-coverage
   - docstr-coverage -F 60.0 heron
  coverage: '/Total coverage: (\d+\.\d+%)/'
  
pylint:
  stage: analysis
  allow_failure: true
  before_script:
    - pip install pylint
  script:
    - pylint heron/*

flake8:
  stage: analysis
  allow_failure: false
  before_script:
    - pip install flake8 flake8_formatter_junit_xml
  script:
    - flake8  --count --select=E9,F63,F7,F82 --format junit-xml --verbose heron > report.xml
    # exit-zero treats all errors as warnings.
    - flake8  --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics  heron/
  artifacts:  
    reports:
      junit: report.xml

test-python38:
  stage: test
  image: python:3.8
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - pip install -r requirements_test.txt
    - python setup.py test

test-python39:
  stage: test
  image: python:3.9
  before_script:
    - pip install coverage unittest-xml-reporting
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - pip install -r requirements_test.txt
    - coverage run -m xmlrunner discover tests/ -o junit-reports
    #- coverage report
    #- coverage xml
  # artifacts:
  #   when: always
  #   paths:
  #     - public/coverage.txt
  #   reports:
  #     junit: junit-reports/*
  #     coverage_report:
  #       coverage_format: cobertura
  #       path: coverage.xml
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'


test-python310:
  stage: test
  image: python:3.10
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - pip install -r requirements_test.txt
    - python setup.py test

test-python311:
  stage: test
  image: python:3.11
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - pip install -r requirements_test.txt
    - python setup.py test
  allow_failure: True

####
# Science Tests
####

science-python39:
  stage: science tests
  image: python:3.9
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - pip install -r requirements_test.txt
    - python -m unittest discover science-tests/
  allow_failure: True

pages:
  image: sphinxdoc/sphinx
  stage: build
  script:
  - pip install numpy
  - pip install -r requirements.txt
  - pip install -r requirements_dev.txt
  - pip install .
  - make docs
  - mv docs/_build/html/ public/
  artifacts:
    paths:
    - public
  only:
  - master
