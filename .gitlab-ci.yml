stages:
  - analysis
  - test
  - build
  - deploy

image: python:3.6

include:
  - template: Dependency-Scanning.gitlab-ci.yml

  
pylint:
  stage: analysis
  allow_failure: true
  before_script:
    - pip install pylint
  script:
    - pylint heron/*

flake8:
  stage: analysis
  allow_failure: false
  before_script:
    - pip install flake8
  script:
    - flake8  --count --select=E9,F63,F7,F82 --show-source --statistics heron/
    # exit-zero treats all errors as warnings.
    - flake8  --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics heron/
    
test-python27:
  stage: test
  image: python:2.7
  allow_failure: true
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - python setup.py test

test-python36:
  stage: test
  image: python:3.6
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - python setup.py test

test-python37:
  stage: test
  image: python:3.7
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - python setup.py test

test-python38:
  stage: test
  image: python:3.8
  script:
    - pip install numpy
    - pip install -r requirements.txt
    - python setup.py test

pages:
  image: sphinxdoc/sphinx
  stage: build
  script:
  - pip install numpy
  - pip install -r requirements.txt
  - pip install -r requirements_dev.txt
  - pip install .
  - make docs
  - mv docs/_build/html/ public/
  artifacts:
    paths:
    - public
  only:
  - master
# Build receipe for standalone wheels on Linux
wheel-27:
  image: python:2.7
  stage: build
  script:
    - pip install wheel
    # Build wheel
    - python setup.py bdist_wheel --universal
  dependencies: []
  artifacts:
    expire_in: 3h
    paths:
      - dist

wheel-36:
  image: python:3.6
  stage: build
  script:
    - pip install wheel
    # Build wheel
    - python setup.py bdist_wheel --universal
  dependencies: []
  artifacts:
    expire_in: 3h
    paths:
      - dist

wheel-37:
  image: python:3.7
  stage: build
  script:
    - pip install wheel
    # Build wheel
    - python setup.py bdist_wheel --universal
  dependencies: []
  artifacts:
    expire_in: 3h
    paths:
      - dist

deploy:wheel:
  stage: deploy
  script:
    - pip install twine
    - twine upload dist/*
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      if: '$CI_COMMIT_TAG'
      when: on_success
    - when: never
